// Code generated by MockGen. DO NOT EDIT.
// Source: todo.go
//
// Generated by this command:
//
//	mockgen -source=todo.go -destination=./mock/mock.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTODORepository is a mock of TODORepository interface.
type MockTODORepository struct {
	ctrl     *gomock.Controller
	recorder *MockTODORepositoryMockRecorder
	isgomock struct{}
}

// MockTODORepositoryMockRecorder is the mock recorder for MockTODORepository.
type MockTODORepositoryMockRecorder struct {
	mock *MockTODORepository
}

// NewMockTODORepository creates a new mock instance.
func NewMockTODORepository(ctrl *gomock.Controller) *MockTODORepository {
	mock := &MockTODORepository{ctrl: ctrl}
	mock.recorder = &MockTODORepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTODORepository) EXPECT() *MockTODORepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTODORepository) Create() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create")
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockTODORepositoryMockRecorder) Create() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTODORepository)(nil).Create))
}
